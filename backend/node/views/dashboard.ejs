<!DOCTYPE html>
<html lang="en">
<head>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Dashboard</title>
  <link href="/css/style.css" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
    <marquee style="background-color: #1a1a2e; padding: 12px; font-weight: bold; font-family: Arial, sans-serif; font-size: 20px; color: white; margin: 0;">
        <% stocks.forEach(stock => { %>
          <span style="margin-right: 50px;">
            <strong><%= stock.symbol %></strong>: ₹<%= stock.price %> 
            (<span class="<%= stock.changePercent.startsWith('-') ? 'negative' : 'positive' %>">
              <%= stock.changePercent.startsWith('-') ? '▼' : '▲' %> <%= stock.changePercent %>
            </span>)
          </span>
        <% }) %>
    </marquee>
      
      
      
          
  <nav class="navbar">
    <div class="logo">StockSentiment</div>
    <ul class="nav-links">
      <li><a href="/auth/logout" class="logout-btn">Logout</a></li>
    </ul>
  </nav>
  
  <div class="search-container">
    <h1 class="search-title">
      Have a look at how your stock might do over the next few days
    </h1>
  
    <form id="ticker-form" class="search-form" method="POST">
      <div class="input-wrapper">
        <select name="query" id="ticker-select" class="dropdown-select" required>
          <option value="" disabled selected>Select a stock ticker...</option>
          <option value="RELIANCE">RELIANCE</option>
          <option value="HDFCBANK">HDFCBANK</option>
          <option value="TCS">TCS</option>
          <option value="INFY">INFY</option>
          <option value="ICICIBANK">ICICIBANK</option>
          <option value="LT">LT</option>
          <option value="ITC">ITC</option>
          <option value="SBIN">SBIN</option>
          <option value="BHARTIARTL">BHARTIARTL</option>
          <option value="KOTAKBANK">KOTAKBANK</option>
          <option value="BAJFINANCE">BAJFINANCE</option>
          <option value="HINDUNILVR">HINDUNILVR</option>
          <option value="M&M">M&M</option>
          <option value="MARUTI">MARUTI</option>
          <option value="SUNPHARMA">SUNPHARMA</option>
          <option value="TATAMOTORS">TATAMOTORS</option>
          <option value="NTPC">NTPC</option>
          <option value="AXISBANK">AXISBANK</option>
          <option value="HCLTECH">HCLTECH</option>
          <option value="TITAN">TITAN</option>
        </select>
        <button type="submit" class="search-button"><i class="fas fa-search"></i></button>
      </div>
    </form>
    
    <script>
      document.getElementById('ticker-form').addEventListener('submit', function (e) {
        const selectedTicker = document.getElementById('ticker-select').value;
        this.action = `/predict/${selectedTicker}`;
      });
    </script>
    
  </div>
  
  <div class="live-graphs-container">
    <h2 class="section-title">Live Market Snapshots</h2>
    <div class="graphs-grid">
      <div class="graph-card">
        <div class="graph-title">NIFTY 50</div>
        <canvas id="niftyChart"></canvas>
      </div>
      <div class="graph-card">
        <div class="graph-title">SENSEX</div>
        <canvas id="sensexChart"></canvas>
      </div>
      <div class="graph-card">
        <div class="graph-title">INR / USD</div>
        <canvas id="inrUsdChart"></canvas>
      </div>
      
    </div>
    
  </div>
  <script>
    let chartRefs = {};
    
    function createChart(canvasId, label, color, initialLabels, initialData) {
      const ctx = document.getElementById(canvasId).getContext("2d");
      return new Chart(ctx, {
        type: 'line',
        data: {
          labels: initialLabels,
          datasets: [{
            label: label,
            data: initialData,
            borderColor: color,
            fill: false,
            tension: 0
          }]
        },
        options: {
          responsive: true,
          plugins: { legend: { display: false } },
          scales: {
  x: {
    display: false,
    title: {
      display: true,
      text: 'Date'
    }
  },
  y: {
    beginAtZero: false,
    title: {
      display: true,
      text: 'Price (INR)'
    }
  }
},
plugins: {
  legend: {
    display: true,
    position: 'top'
  }
}

        }
      });
    }
    
    async function loadHistoricalChart(symbol, canvasId, label, color) {
      const res = await fetch(`/api/history/${symbol}`);
      const data = await res.json();
    
      const labels = data.map(d => new Date(d.date).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }));

      const prices = data.map(d => d.price);
    
      chartRefs[label] = createChart(canvasId, label, color, labels, prices);
    }
    
    // Load your charts on page load
    document.addEventListener("DOMContentLoaded", () => {
      loadHistoricalChart("NIFTYBEES.NS", "niftyChart", "NIFTY 50", "#2E4A62");
      loadHistoricalChart("^BSESN", "sensexChart", "SENSEX", "#6A9FB5");
      loadHistoricalChart("USDINR=X", "inrUsdChart", "INR/USD", "#b552b8");
    });

    </script>
    
      
  
</body>
</html>
